<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.KejianMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加课件信息记录 -->
	<insert id="addKejian" parameterType="kejian">
		insert into t_kejian(title,path,addTime) values 
		(#{title},#{path},#{addTime})
	</insert>

	<!-- 按照查询条件分页查询课件信息记录 -->
	<select id="queryKejian" resultMap="kejianMap" >
		select t_kejian.* from t_kejian ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="kejianMap" type="kejian">
        <id property="id" column="id" />
    </resultMap>

    <!-- 按照查询条件查询所有课件信息记录 -->
	<select id="queryKejianList" resultMap="kejianMap" >
		select t_kejian.* from t_kejian ${where}
	</select>

    <!-- 按照查询条件的课件信息记录数 -->
	<select id="queryKejianCount" resultType="int">
		select count(*) from t_kejian ${where}
	</select>

	<!-- 根据主键查询某个课件信息记录 -->
	<select id="getKejian" parameterType="int" resultMap="kejianMap">
		select * from t_kejian where t_kejian.id = #{id}
	</select>

	<!-- 更新课件信息记录 -->
	<update id="updateKejian" parameterType="kejian">
		update t_kejian set title=#{title},path=#{path},addTime=#{addTime} where id = #{id}
	</update>

	<!-- 删除课件信息记录 -->
	<delete id="deleteKejian" parameterType="int">
		delete from t_kejian where id=#{id}
	</delete>

</mapper>
