<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.VideoMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加视频信息记录 -->
	<insert id="addVideo" parameterType="video">
		insert into t_video(title,chapterId,path,addTime) values 
		(#{title},#{chapterId.id},#{path},#{addTime})
	</insert>

	<!-- 按照查询条件分页查询视频信息记录 -->
	<select id="queryVideo" resultMap="videoMap" >
		select t_video.* from t_video,t_chapter ${where} and t_video.chapterId = t_chapter.id limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="videoMap" type="video">
        <id property="id" column="id" />
        <association property="chapterId" column="chapterId" select="com.chengxusheji.mapper.ChapterMapper.getChapter" />
    </resultMap>

    <!-- 按照查询条件查询所有视频信息记录 -->
	<select id="queryVideoList" resultMap="videoMap" >
		select t_video.* from t_video,t_chapter ${where} and t_video.chapterId = t_chapter.id
	</select>

    <!-- 按照查询条件的视频信息记录数 -->
	<select id="queryVideoCount" resultType="int">
		select count(*) from t_video,t_chapter ${where} and t_video.chapterId = t_chapter.id
	</select>

	<!-- 根据主键查询某个视频信息记录 -->
	<select id="getVideo" parameterType="int" resultMap="videoMap">
		select * from t_video where t_video.id = #{id}
	</select>

	<!-- 更新视频信息记录 -->
	<update id="updateVideo" parameterType="video">
		update t_video set title=#{title},chapterId=#{chapterId.id},path=#{path},addTime=#{addTime} where id = #{id}
	</update>

	<!-- 删除视频信息记录 -->
	<delete id="deleteVideo" parameterType="int">
		delete from t_video where id=#{id}
	</delete>

</mapper>
